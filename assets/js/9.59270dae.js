(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{281:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"网络自动化平台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络自动化平台"}},[t._v("#")]),t._v(" 网络自动化平台")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/IFLY-DevNet/net-axe/raw/master/resource/%E6%9E%B6%E6%9E%84%E5%9B%BE.jpg",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"功能概要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能概要"}},[t._v("#")]),t._v(" 功能概要:")]),t._v(" "),a("ul",[a("li",[t._v("资产管理")]),t._v(" "),a("li",[t._v("配置备份(nornir)")]),t._v(" "),a("li",[t._v("配置差异比较")]),t._v(" "),a("li",[t._v("webssh")]),t._v(" "),a("li",[t._v("设备数据的统一采集并统一数据格式(celery 多进程+netmiko)")]),t._v(" "),a("li",[t._v("设备接口利用率分析")])]),t._v(" "),a("h2",{attrs:{id:"_1-安装前置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装前置"}},[t._v("#")]),t._v(" 1. 安装前置")]),t._v(" "),a("ul",[a("li",[t._v("操作系统 : centos 7.×")]),t._v(" "),a("li",[t._v("docker 版本 >= 18.9")]),t._v(" "),a("li",[t._v("docker-compose 版本 >= 1.18.0")]),t._v(" "),a("li",[t._v("配置差异比较依赖 git 配置，请确认有现成的 git 仓库可以用来保存设备配置数据")])]),t._v(" "),a("h2",{attrs:{id:"_2-docker配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker配置"}},[t._v("#")]),t._v(" 2. docker配置")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" /etc/docker/daemon.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<-")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'EOF\'\n{\n"registry-mirrors": ["https://tawedu6l.mirror.aliyuncs.com"]\n}\nEOF')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl daemon-reload\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"_3-设备配置备份目录的-git-初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-设备配置备份目录的-git-初始化"}},[t._v("#")]),t._v(" 3. 设备配置备份目录的 git 初始化")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\n克隆项目到本地 是项目的正确打开方式， 会第一时间享受到功能的更新以及问题优化\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这一步是克隆项目到本地")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://gitee.com/IFLY-DevNet/net-axe.git\n会在你的当前目录下，生成一个名为net-axe的项目文件夹\n进入项目文件夹\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" net-axe\n生成配置备份专用的工作目录，并对其进行git初始化\n记住，这个是配置备份的专用目录，git地址也应该是你自己单独建的一个仓库地址，跟本项目的git无关\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" netaxe/media/device_config/current-configuration\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" netaxe/media/device_config\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面是需要单独再建立一个git关联你自己的git仓库，专门用来管理网络设备配置文件的，跟项目git不冲突也没关系")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin 仓库地址\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream-to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("origin/master master\n\n")])])]),a("h2",{attrs:{id:"_4-conf-py-文件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-conf-py-文件配置"}},[t._v("#")]),t._v(" 4. conf.py 文件配置")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("项目目录下执行"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("例如我这里是/home/net-axe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" netaxe/netboost/conf_bak.py netaxe/netboost/conf.py\n修改项目配置文件，将宿主机的网卡IP配置替换到配置文件中"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("例如192.168.11.11，根据实际网卡IP配置"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s/{SERVERIP}/192.168.11.11/g"')]),t._v(" netaxe/netboost/conf.py\n\n")])])]),a("h2",{attrs:{id:"_5-服务初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-服务初始化"}},[t._v("#")]),t._v(" 5. 服务初始化")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" docker/server\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" init.yml up "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"_6-数据库初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-数据库初始化"}},[t._v("#")]),t._v(" 6. 数据库初始化")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\n进入后端服务容器命令行\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" netaxe-server /bin/bash\npython3 manage.py migrate\npython3 manage.py makemigrations asset\npython3 manage.py migrate asset\npython3 manage.py makemigrations rest_framework_tracking\npython3 manage.py migrate rest_framework_tracking\npython3 manage.py init_asset\npython3 manage.py init_route\npython3 manage.py createsuperuser "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建管理员账户，要输入管理员账户和密码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"_7-关闭初始化服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-关闭初始化服务"}},[t._v("#")]),t._v(" 7. 关闭初始化服务")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("关闭该路径下所有容器服务\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" init.yml down "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"_8-重启前后端服务-docker-server-服务目录下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-重启前后端服务-docker-server-服务目录下"}},[t._v("#")]),t._v(" 8. 重启前后端服务 docker/server 服务目录下")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" build\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"_9-访问前端和后端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-访问前端和后端"}},[t._v("#")]),t._v(" 9. 访问前端和后端")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\nweb 界面端口号 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v("\ndjango 后台端口 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9999")]),t._v(" 浏览器访问为 http://服务器 IP:9999/admin\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);